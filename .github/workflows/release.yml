name: Release

on:
  push:
    tags:
      - 'v*'

jobs:
  build:
    name: Build Release
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.21'
        
    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: 'frontend/package-lock.json'
        
    - name: Install frontend dependencies
      run: cd frontend && npm ci
      
    - name: Build frontend
      run: cd frontend && npm run build
      
    - name: Get version
      id: get_version
      run: echo "VERSION=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT
      
    - name: Build for Linux
      run: |
        mkdir -p dist
        GOOS=linux GOARCH=amd64 go build -v -o dist/fishki-${{ steps.get_version.outputs.VERSION }}-linux-amd64 ./cmd/fishki-server
        
    - name: Build for macOS
      run: |
        GOOS=darwin GOARCH=amd64 go build -v -o dist/fishki-${{ steps.get_version.outputs.VERSION }}-darwin-amd64 ./cmd/fishki-server
        GOOS=darwin GOARCH=arm64 go build -v -o dist/fishki-${{ steps.get_version.outputs.VERSION }}-darwin-arm64 ./cmd/fishki-server
        
    - name: Build for Windows
      run: |
        GOOS=windows GOARCH=amd64 go build -v -o dist/fishki-${{ steps.get_version.outputs.VERSION }}-windows-amd64.exe ./cmd/fishki-server
        
    - name: Create release
      uses: softprops/action-gh-release@v2
      with:
        files: |
          dist/fishki-${{ steps.get_version.outputs.VERSION }}-linux-amd64
          dist/fishki-${{ steps.get_version.outputs.VERSION }}-darwin-amd64
          dist/fishki-${{ steps.get_version.outputs.VERSION }}-darwin-arm64
          dist/fishki-${{ steps.get_version.outputs.VERSION }}-windows-amd64.exe
        draft: false
        prerelease: false
        generate_release_notes: true
        token: ${{ secrets.GITHUB_TOKEN }}
        
  docker:
    name: Build and Push Docker Image
    runs-on: ubuntu-latest
    needs: build
    permissions:
      contents: read
      packages: write
      
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
      
    - name: Log in to the Container registry
      uses: docker/login-action@v3
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
        
    - name: Extract metadata
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: ghcr.io/${{ github.repository }}
        tags: |
          type=semver,pattern={{version}}
          type=semver,pattern={{major}}.{{minor}}
          
    - name: Build and push Docker image
      uses: docker/build-push-action@v6
      with:
        context: .
        push: true
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        cache-from: type=gha
        cache-to: type=gha,mode=max
